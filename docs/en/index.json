[{"content":"Bezu Identity This post just briefly explains Bézout\u0026rsquo;s theorem in arithmetic.\n conference Bézout\u0026rsquo;s identity\n Let a and b be integers with greatest common divisor d. Then, there exist integers x and y such that ax + by = d. More generally, the integers of the form ax + by are exactly the multiples of d.\nIn particular, there are integers x , y such that ax + by = d.\nAn important corollary is that the necessary and sufficient condition for a and b to be prime is the existence of integers x, y such that ax + by = 1.\nHistory French mathematician Étienne Bézout (1730–1783) proved this identity for polynomials.[1] However, this statement for integers can be found already in the work of another French mathematician, Claude Gaspard Bachet de Méziriac (1581–1638).[2][3][4]\nNotes [1] Bézout, É. (1779). Théorie générale des équations algébriques. Paris, France: Ph.-D. Pierres.\n[2] Tignol, Jean-Pierre (2001). Galois\u0026rsquo; Theory of Algebraic Equations. Singapore: World Scientific. ISBN 981-02-4541-6.\n[3] Claude Gaspard Bachet (sieur de Méziriac) (1624). Problèmes plaisants \u0026amp; délectables qui se font par les nombres (2nd ed.). Lyons, France: Pierre Rigaud \u0026amp; Associates. pp. 18–33. On these pages, Bachet proves (without equations) \u0026ldquo;Proposition XVIII. Deux nombres premiers entre eux estant donnez, treuver le moindre multiple de chascun d’iceux, surpassant de l’unité un multiple de l’autre.\u0026rdquo; (Given two numbers [which are] relatively prime, find the lowest multiple of each of them [such that] one multiple exceeds the other by unity (1).) This problem (namely, ax - by = 1) is a special case of Bézout\u0026rsquo;s equation and was used by Bachet to solve the problems appearing on pages 199 ff.\n[4] See also: Maarten Bullynck (February 2009). \u0026ldquo;Modular arithmetic before C.F. Gauss: Systematizations and discussions on remainder problems in 18th-century Germany\u0026rdquo; (PDF). Historia Mathematica. 36 (1): 48–72. doi:10.1016/j.hm.2008.08.009.\n","description":"","id":0,"section":"posts","tags":["Bezu identity","LeetCodeEasy"],"title":"Bézout's identity","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/bezu-identity/"},{"content":"LeetCode 67. Add Binary Included in my LeetCode Topic Given two binary strings, return their sum (also a binary string).\nThe input strings are both non-empty and contains only characters 1 or 0.\nExample 1 2 3 4 5  Input: a = \u0026#34;11\u0026#34;, b = \u0026#34;1\u0026#34;\rOutput: \u0026#34;100\u0026#34;\rInput: a = \u0026#34;1010\u0026#34;, b = \u0026#34;1011\u0026#34;\rOutput: \u0026#34;10101\u0026#34;\r  Solution Ⅰ No more words.😂\n1 2 3  class Solution:\rdef addBinary(self, a: str, b: str) -\u0026gt; str:\rreturn bin(int(a, 2) + int(b, 2))[2:]\r  Ⅱ Use hashTable.\n left Fill \u0026lsquo;0\u0026rsquo; to the shorter one until its length is the same as the other. Create a hashTable to record all states of the bitwise addition result of two binary strings. Each key in the hashTable has three characters, which represent the characters in a, the characters in b, and carry of previous bit.The value of each key has two characters, representing the ch(result) and carry of current bit. ans += ch and reverse the ans  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  class Solution:\rdef addBinary(self, a: str, b: str) -\u0026gt; str:\ralen = len(a)\rblen = len(b)\rif alen \u0026gt; blen:\rb = b.zfill(alen)\relse:\ra = a.zfill(blen)\rans = \u0026#39;\u0026#39;\rcarry = \u0026#39;0\u0026#39;\rhm = {\r\u0026#39;000\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;0\u0026#39;),\r\u0026#39;101\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;011\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;110\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;001\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;0\u0026#39;),\r\u0026#39;100\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;0\u0026#39;),\r\u0026#39;010\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;0\u0026#39;),\r\u0026#39;111\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39; 0\u0026#39; : (\u0026#39;\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39; 1\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;\u0026#39;)\r}\rfor ach,bch in zip(a[::-1] + \u0026#39; \u0026#39;, b[::-1] + \u0026#39; \u0026#39;):\rtmp = ach + bch + carry\rch, carry = hm[tmp]\rans += ch\rreturn ans[::-1]\r  Ⅲ As we all know, in python, the string is immutable.You cannot overwrite the values of immutable objects.\nTherefore, if you assign the variable again, it will create a new string object. In this case, the execution efficiency will be reduced to a certain extent\nSo change the initial value of carry to ''. And when carry is \u0026lsquo;0\u0026rsquo; change carry to ''\nThe code may run slightly faster in this way.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  class Solution:\rdef addBinary(self, a: str, b: str) -\u0026gt; str:\ralen = len(a)\rblen = len(b)\rif alen \u0026gt; blen:\rb = b.zfill(alen)\relse:\ra = a.zfill(blen)\rcarry = ans = \u0026#39;\u0026#39;\rhm = {\r\u0026#39;00\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39;101\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;011\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;11\u0026#39; : (\u0026#39;0\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39;001\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39;10\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39;01\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39;111\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;1\u0026#39;),\r\u0026#39; \u0026#39; : (\u0026#39;\u0026#39;, \u0026#39;\u0026#39;),\r\u0026#39; 1\u0026#39; : (\u0026#39;1\u0026#39;, \u0026#39;\u0026#39;)\r}\rfor ach,bch in zip(a[::-1] + \u0026#39; \u0026#39;, b[::-1] + \u0026#39; \u0026#39;):\rtmp = ach + bch + carry\rch, carry = hm[tmp]\rans += ch\rreturn ans[::-1]\r  ","description":"","id":1,"section":"posts","tags":["hashTable","LeetCodeEasy"],"title":"LeetCode 67","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-67/"},{"content":"LeetCode Interview Questions 01.06. Compress String LCCI Included in my LeetCode Topic Implement a method to perform basic string compression using the counts of repeated characters.\nFor example, the string aabcccccaaa would become a2blc5a3. If the \u0026ldquo;compressed\u0026rdquo; string would not become smaller than the original string, your method should return the original string.\nYou can assume the string has only uppercase and lowercase letters (a - z).\nExample 1 2 3 4 5 6 7  Input: \u0026#34;aabcccccaaa\u0026#34;\rOutput: \u0026#34;a2b1c5a3\u0026#34;\rInput: \u0026#34;abbccd\u0026#34;\rOutput: \u0026#34;abbccd\u0026#34;\rExplanation: The compressed string is \u0026#34;a1b2c2d1\u0026#34;, which is longer than the original string.\r  Note 0 \u0026lt;= S.length \u0026lt;= 50000\nSolution Use f-string is faster.\nCheck here (for English) or here (for Chinese)for more help if you don\u0026rsquo;t know how to use it.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  class Solution:\rdef compressString(self, S: str) -\u0026gt; str:\rn = len(S)\rif n \u0026lt;= 2:\rreturn S\rcnt = charsCnt = 1\rchar = S[0]\rans = \u0026#39;\u0026#39;\rn = n \u0026gt;\u0026gt; 1\rfor ch in S[1:] + \u0026#39; \u0026#39;:\rif ch != char:\rans += f\u0026#34;{char}{cnt}\u0026#34;\rchar = ch\rcnt = 1\rcharsCnt += 1\relse:\rcnt += 1\rif charsCnt - 1 \u0026gt; n:\rreturn S\rreturn ans\r  ","description":"","id":2,"section":"posts","tags":["LeetCodeEasy"],"title":"LeetCode Interview Questions 01.06","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-interview-questions-0106/"},{"content":"f-string f-string also known as formatted string literals, a new string formatting method introduced in Python 3.6. The method is derived from PEP 498 – Literal String Interpolation, is designed to make the operation of formatting string more concise.f-string is a string literal that is prefixed with \u0026lsquo;f\u0026rsquo; or \u0026lsquo;F'(like f\u0026rsquo;xxx\u0026rsquo; or F\u0026rsquo;xxx\u0026rsquo;). These strings may contain replacement fields, which are expressions delimited by curly braces {}.\nWhile other string literals always have a constant value, formatted strings are really expressions evaluated at run time.\nf-string is not inferior to the traditional %-formatting statement and str.format() functional in terms of function, and its performance is better than both, and more concise to use. Therefore, it is recommended to use f-string performs string formatting at Python 3.6 and later.\nCommon Use Format strings contain \u0026ldquo;replacement fields\u0026rdquo; surrounded by curly braces {}. Anything that is not contained in braces is considered literal text, which is copied unchanged to the output. If you need to include a brace character in the literal text, it can be escaped by doubling: {{ and }}.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026gt;\u0026gt;\u0026gt; name = \u0026#39;Eric\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;Hello, my name is {name}\u0026#39;\r\u0026#39;Hello, my name is Eric\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; number = 7\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;My lucky number is {number}\u0026#39;\r\u0026#39;My lucky number is 7\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; price = 19.99\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;The price of this book is {price}\u0026#39;\r\u0026#39;The price of this book is 19.99\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;5 {\u0026#34;{stars}\u0026#34;}\u0026#39;\r\u0026#39;5 {stars}\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;{{5}} {\u0026#34;stars\u0026#34;}\u0026#39;\r\u0026#39;{5} stars\u0026#39;\r  Expression evaluation and function calls Python can also perform expression evaluation or call functions in a pair of curly braces.\n1 2 3 4 5 6 7 8 9 10 11 12 13  \u0026gt;\u0026gt;\u0026gt; f\u0026#39;A total number of {24 * 8 + 4}\u0026#39;\r\u0026#39;A total number of 196\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;Complex number {(2 + 2j) / (2 - 3j)}\u0026#39;\r\u0026#39;Complex number (-0.15384615384615388+0.7692307692307692j)\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; name = \u0026#39;ERIC\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;My name is {name.lower()}\u0026#39;\r\u0026#39;My name is eric\u0026#39;\r\u0026gt;\u0026gt;\u0026gt; import math\r\u0026gt;\u0026gt;\u0026gt; f\u0026#39;The answer is {math.log(math.pi)}\u0026#39;\r\u0026#39;The answer is 1.1447298858494002\u0026#39;\r  For more HELP Check following links or my Chinese post if u wonder more HELP.\n conference:\n Python格式化字符串f-string概览 Python Documentation – Formatted String Literals Python Documentation – Format String Syntax PEP 498 – Literal String Interpolation Python 3’s f-Strings: An Improved String Formatting Syntax (Guide) python3 f-string格式化字符串的高级用法 Python 3: An Intro to f-strings    I\u0026rsquo;ll update if I used next time.  ","description":"","id":3,"section":"posts","tags":["python"],"title":"Python f-string","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/python-f-string/"},{"content":"LeetCode 409. Longest Palindrome Included in my LeetCode Topic Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.\nThis is case sensitive, for example \u0026ldquo;Aa\u0026rdquo; is not considered a palindrome here.\nExample 1 2 3 4 5 6  Input:\u0026#34;abccccdd\u0026#34;\rOutput:7\rExplanation:\rOne longest palindrome that can be built is \u0026#34;dccaccd\u0026#34;, whose length is 7.\r  Note Assume the length of given string will not exceed 1,010.\nSolution Ⅰ There can be oddLetter[2] at the middle of palindrome.\nTherefore, use collections.Counter to create a dict to count letters and traverse the Counter. cnt += Counter[letter].value() if the letter is evenLetter[1], otherwise cnt += Counter[letter].value() - 1(to make sure the letter you add have its partner) and cnt += 1 before return.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  class Solution:\rdef longestPalindrome(self, s: str) -\u0026gt; int:\rht = collections.Counter(s)\rflag = cnt = 0\rfor i in ht:\rval = ht[i]\rif val \u0026amp; 1 == 0:\rcnt += val\relse:\rcnt += val - 1\rflag = 1\rif flag:\rcnt += 1\rreturn cnt\r  Ⅱ Another way, we can do the reverse.\nUse len(s) subtract oddCnt (the number of oddLetter[2]) and plus 1 (if oddCnt \u0026gt; 0).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  class Solution:\rdef longestPalindrome(self, s: str) -\u0026gt; int:\r#2\r ht = collections.Counter(s)\rflag = oddCnt = 0\rfor i in ht:\rif ht[i] \u0026amp; 1 == 1:\roddCnt += 1\rflag = 1\rreturn len(s) - oddCnt + flag\r#1\r \u0026#39;\u0026#39;\u0026#39;\rht = collections.Counter(s)\rreturn len(s) - max(0,sum(ht[i]%2 for i in ht)-1)\r\u0026#39;\u0026#39;\u0026#39;\r  Annotation [1]evenLetter：The number of letter is a even.\n[2]oddLetter：The number of letter is an odd.\nNote：Only in this article.\n","description":"","id":4,"section":"posts","tags":["hashTable","LeetCodeEasy"],"title":"LeetCode 409","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-409/"},{"content":"The time complexity of collections.Counter() in Python As the source code shows, Counter is just a subclass of dict. Constructing it is O(n), because it has to iterate over the input, but operations on individual elements remain O(1).\nNote also from that source that it does not keep an order internally, but simply sorts by most common on output, in the ***__repr__*** method.\n Origin post from: StackOverflow-What is the time complexity of collections.Counter() in Python?\n ","description":"","id":5,"section":"posts","tags":["python"],"title":"Python collections.Counter Time Complexity","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/python-counter-time-complexity/"},{"content":"Time complexity of Python\u0026rsquo;s built-ins  conference Python Wiki\n This page documents the time-complexity (aka \u0026ldquo;Big O\u0026rdquo; or \u0026ldquo;Big Oh\u0026rdquo;) of various operations in current CPython (last edited 2017-06-05 19:58:18 by JonathanHartley). Other Python implementations (or older or still-under development versions of CPython) may have slightly different performance characteristics. However, it is generally safe to assume that they are not slower by more than a factor of O(log n).\nGenerally, \u0026lsquo;n\u0026rsquo; is the number of elements currently in the container. \u0026lsquo;k\u0026rsquo; is either the value of a parameter or the number of elements in the parameter.\nlist The Average Case assumes parameters generated uniformly at random.\nInternally, a list is represented as an array; the largest costs come from growing beyond the current allocation size (because everything must move), or from inserting or deleting somewhere near the beginning (because everything after that must move). If you need to add/remove at both ends, consider using a collections.deque instead.\n   Operation Average Case Amortized Worst Case     Copy O(n) O(n)   Append[1] O(1) O(1)   Pop last O(1) O(1)   Pop intermediate O(k) O(k)   Insert O(n) O(n)   Get Item O(1) O(1)   Set Item O(1) O(1)   Delete Item O(n) O(n)   Iteration O(n) O(n)   Get Slice O(k) O(k)   Del Slice O(n) O(n)   Set Slice O(k+n) O(k+n)   Extend[1] O(k) O(k)   Sort O(n log n) O(n log n)   Multiply O(nk) O(nk)   x in s O(n)    min(s), max(s) O(n)    Get Length O(1) O(1)    collections.deque A deque (double-ended queue) is represented internally as a doubly linked list. (Well, a list of arrays rather than objects, for greater efficiency.) Both ends are accessible, but even looking at the middle is slow, and adding to or removing from the middle is slower still.\n   Operation Average Case Amortized Worst Case     Copy O(n) O(n)   append O(1) O(1)   appendleft O(1) O(1)   pop O(1) O(1)   popleft O(1) O(1)   extend O(k) O(k)   extendleft O(k) O(k)   rotate O(k) O(k)   remove O(n) O(n)    set    Operation Average case Worst Case notes     x in s O(1) O(n)    Union s | t O(len(s)+len(t))     Intersection s\u0026amp;t O(min(len(s), len(t)) O(len(s) * len(t)) replace \u0026ldquo;min\u0026rdquo; with \u0026ldquo;max\u0026rdquo; if t is not a set   Multiple intersection s1\u0026amp;s2\u0026amp;..\u0026amp;sn  (n-1)*O(l) where l is max(len(s1),..,len(sn))    Difference s - t O(len(s))     s.difference_update(t) O(len(t))     Symmetric Difference s^t O(len(s)) O(len(s) * len(t))    s.symmetric_difference_update(t) O(len(t)) O(len(t) * len(s))      As seen in the source code the complexities for set difference s-t or s.difference(t) (set_difference()) and in-place set difference s.difference_update(t) (set_difference_update_internal()) are different! The first one is O(len(s)) (for every element in s add it to the new set, if not in t). The second one is O(len(t)) (for every element in t remove it from s). So care must be taken as to which is preferred, depending on which one is the longest set and whether a new set is needed.\nTo perform set operations like s-t, both s and t need to be sets. However you can do the method equivalents even if t is any iterable, for example s.difference(l), where l is a list.\n dict The Average Case times listed for dict objects assume that the hash function for the objects is sufficiently robust to make collisions uncommon. The Average Case assumes the keys used in parameters are selected uniformly at random from the set of all keys.\nNote that there is a fast-path for dicts that (in practice) only deal with str keys; this doesn\u0026rsquo;t affect the algorithmic complexity, but it can significantly affect the constant factors: how quickly a typical program finishes.\n   Operation Average Case Amortized Worst Case     Copy[2] O(n) O(n)   Get Item O(1) O(n)   Set Item[1] O(1) O(n)   Delete Item O(1) O(n)   Iteration[2] O(n) O(n)    Notes [1] = These operations rely on the \u0026ldquo;Amortized\u0026rdquo; part of \u0026ldquo;Amortized Worst Case\u0026quot;. Individual actions may take surprisingly long, depending on the history of the container.\n[2] = For these operations, the worst case n is the maximum size the container ever achieved, rather than just the current size. For example, if N objects are added to a dictionary, then N-1 are deleted, the dictionary will still be sized for N objects (at least) until another insertion is made.\n","description":"","id":6,"section":"posts","tags":["python"],"title":"Python Time Complexity","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/python-time-complexity/"},{"content":"Several ways to get code runtime in Python3 Ⅰ 1 2 3 4 5  import time\rstart =time.time()\r#code block\r end = time.time()\rprint(\u0026#39;Running time: %sSeconds\u0026#39;%(end-start))\r  Ⅱ 1 2 3 4 5  import timeit\rstart=timeit.default_timer()\r#code block\r end=timeit.default_timer()\rprint(\u0026#39;Running time: %sSeconds\u0026#39;%(end-start))\r  Ⅲ 1 2 3 4 5  import time\rstart =time.perf_counter()\r#code block\r end = time.perf_counter()\rprint(\u0026#39;Running time: %sSeconds\u0026#39;%(end-start))\r  Ⅳ 1 2 3 4 5 6  import time\rstart =time.process_time()\r#code block\r end = time.process_time()\rprint(\u0026#39;Running time: %sSeconds\u0026#39;%(end-start))\r#One digit after the decimal point\r   ","description":"","id":7,"section":"posts","tags":["python"],"title":"Code Runtime in Python3","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/code-runtime-in-python3/"},{"content":"Python for-else \u0026amp; while-else clauses Included in python daily tips for-else Basic structure This is the basic structure of a for-else loop:\n1 2 3 4 5 6 7 8  for item in container: if search_something(item): # Found it! process(item) break else: # Didn\u0026#39;t find anything.. not_found_in_container()   Explanation for loops also have an else clause which most of us are unfamiliar with. The else clause executes after the loop completes normally. This means that the loop did not encounter a break statement. They are really useful once you understand where to use them.\n For example, LeetCode 1160. Find Words That Can Be Formed by Characters\n The common construct is to run a loop and search for an item. If the item is found, we break out of the loop using the break statement. There are two scenarios in which the loop may end. The first one is when the item is found and break is encountered. The second scenario is that the loop ends without encountering a break statement. Now we may want to know which one of these is the reason for a loop’s completion. One method is to set a flag and then check it once the loop ends. Another is to use the else clause.\nwhile-else Likewise, \u0026lsquo;while-else\u0026rsquo; clause is same as \u0026lsquo;for-else\u0026rsquo;\n conference https://book.pythontips.com/en/latest/for_-_else.html\n ","description":"","id":8,"section":"posts","tags":["python"],"title":"Python for-else","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/python-for-else/"},{"content":"LeetCode 1160. Find Words That Can Be Formed by Characters Included in my LeetCode Topic You are given an array of strings words and a string chars.\nA string is good if it can be formed by characters from chars (each character can only be used once).\nReturn the sum of lengths of all good strings in words.\nExample 1 2 3 4 5 6 7 8 9  Input: words = [\u0026#34;cat\u0026#34;,\u0026#34;bt\u0026#34;,\u0026#34;hat\u0026#34;,\u0026#34;tree\u0026#34;], chars = \u0026#34;atach\u0026#34;\rOutput: 6\rExplanation: The strings that can be formed are \u0026#34;cat\u0026#34; and \u0026#34;hat\u0026#34; so the answer is 3 + 3 = 6.\rInput: words = [\u0026#34;hello\u0026#34;,\u0026#34;world\u0026#34;,\u0026#34;leetcode\u0026#34;], chars = \u0026#34;welldonehoneyr\u0026#34;\rOutput: 10\rExplanation: The strings that can be formed are \u0026#34;hello\u0026#34; and \u0026#34;world\u0026#34; so the answer is 5 + 5 = 10.\r  Note  1 \u0026lt;= words.length \u0026lt;= 1000 1 \u0026lt;= words[i].length, chars.length \u0026lt;= 100 All strings contain lowercase English letters only.  Solution Ⅰ Use collections.Counter to create a hashTable to compare the number of letters.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  class Solution:\rdef countCharacters(self, words: List[str], chars: str) -\u0026gt; int:\r#1\r cnt = ans = 0\rtmp = hm = collections.Counter(chars)\rfor word in words:\rcnt = 0\rtmp = copy.copy(hm)\rfor ch in word:\rif ch in tmp and tmp[ch] \u0026gt; 0:\rcnt += 1\rtmp[ch] -= 1\relse:\rcnt = 0\rbreak\rans += cnt\rreturn ans\r  Ⅱ for-else Use for-else clause, more concise.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  class Solution:\rdef countCharacters(self, words: List[str], chars: str) -\u0026gt; int:\r#2.1\r #single hashTable, faster than v2.0\r ans = 0\rht = collections.Counter(chars)\rfor word in words:\rfor ch in word:\rif ch not in ht or word.count(ch) \u0026gt; hm[ch]:\rbreak\relse:\rans += len(word)\rreturn ans\r#2.0\r #double hashTable\r \u0026#39;\u0026#39;\u0026#39;\rchars_cnt = collections.Counter(chars)\rans = 0\rfor word in words:\rword_cnt = collections.Counter(word)\rfor c in word_cnt:\rif chars_cnt[c] \u0026lt; word_cnt[c]:\rbreak\relse:\rans += len(word)\rreturn ans\u0026#39;\r\u0026#39;\u0026#39;\u0026#39;\r  ","description":"","id":9,"section":"posts","tags":["hashTable","LeetCodeEasy"],"title":"LeetCode 1160","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-1160/"},{"content":"Use GitHub to Host a Free Static Website Included in Hugo Blog This is an easy way to host your blog and a quick way.\nChange Your Publish Directory Delete \u0026ldquo;public\u0026rdquo; folder Delete it first, if your blog\u0026rsquo;s root directory has a \u0026ldquo;public\u0026rdquo; folder.\nsudo rm -rf dd\nChange publish directory to \u0026ldquo;docs\u0026rdquo; $ hugo --destination docs --gc server\nExecute this command would change your publish directory to \u0026ldquo;docs\u0026rdquo; folder, and start hugo server.\n\u0026ndash;gc option, enable to run some cleanup tasks (remove unused cache files) after the build.\nCheck your static website U can check your site, after start your hugo server.\nIf there are no errors, you can take the next step.\nCreate a public repo Sign up for Github (Skip, if u have Github account) Sign up for Github\nNew a public repo Get a awesome name, cause your blog site will look like this: https://userName.github.io/repoName/\n If UDK how to create a new repo, click here\n Push your \u0026ldquo;docs\u0026rdquo; folder to your repo create a .gitignore file Create a .gitignore at your root folder will make it easier to git push.\n This will be helpful, if UDK how to do.\n git push command  This will be helpful, if UDK how to do.\n 🎉Now your static website is hosted on Github.\nAbout  Git Commands \u0026amp; FAQ\nhugo host on Github\nGitHub Pages\n ","description":"","id":10,"section":"posts","tags":["hugo","github"],"title":"Hugo Host on Github","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/hugo-host-on-github/"},{"content":"Included in Hugo Blog (Do u want to build a static website for yourself?) Included in Git Commands \u0026amp; FAQ git clone There are 2 ways to use git clone\n1. Using HTTPS This is a simple way to clone github repos from others or you.\ngit clone HTTPS(https://github.com/example.git)\n2. Using SSH This command only can clone the repository which it\u0026rsquo;s owner give U Private key or clone own repository.\ngit clone SSH(git@github.com:example.git)\nConfigure own repo with SSH KEY Enter following commands into ur command line:\n$ ssh-keygen\r#Generating public/private rsa key pair.\r#First line is select a storage path, press \u0026quot;Enter\u0026quot; for default\r#For *Win10 user* default path is /c/User/urSysUserName/.ssh/id_rsa\r#The next two lines are enter passphrase twice.You can press \u0026quot;Enter\u0026quot; twice directly\r$ cd ~/.ssh\r$ cat ~/.ssh/id_rsa.pub\r#Check ur PUBLIC KEY contents\r#Copy and paste the contents of the public key into *github* or others\r$ ssh -T git@github.com\r#check the connection to github\rgit push $ git init\r$ touch .gitignore\r$ vim .gitignore #type files or folders ignored by *git add*\r$ git add . #or git add \u0026lt;fileName or folderName\u0026gt;\r$ git commit -m \u0026quot;First commit\u0026quot; #-m option, add a description for this commit\r$ git remote add origin HTTPSorSSH\r#format: git remote add \u0026lt;remote repo's name\u0026gt; \u0026lt;remote repo's HTTPS\u0026gt;\r$ git push -u origin master #origin is remote repo's name\r#master is your current branch.\r#-u option, set default remote repo's name.\r#just type \u0026quot;git push\u0026quot; when u push next time.\rKnow for more by typing \u0026ldquo;git push -h\u0026rdquo;\nEmpty the contents of the repo on github $ git rm -rf *\r$ gir commit -m \u0026quot;empty the repo\u0026quot;\r$ git push -f\r","description":"","id":11,"section":"posts","tags":["git","github"],"title":"Git Basic Commands 1","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/git-basic-commands-1/"},{"content":"Included in Hugo Blog (Do u want to build a static website for yourself?) What is Git? Git is a free, open source distributed version control system tool designed to handle everything from small to very large projects with speed and efficiency.\n conference https://git-scm.com/\n Download Git Windows\rLinux\rMacOS\r\rchoco install git.install\r#or\rscoop install git\r If you didn\u0026rsquo;t install any package manager or installer, like choco, scoop\nThat\u0026rsquo;s will be fine, click here to download Git\n\rThe following commands that begin with \u0026ldquo;#\u0026rdquo; require root access. Ubuntu sudo apt-get install git\nFedora # dnf install git Fedora 22 and later\n# yum install git up to Fedora 21\nGentoo # emerge --ask --verbose dev-vcs/git\nArch Linux # pacman -S git\nopenSUSE # zypper install git\nMageia # urpmi git\nNix/NixOS # nix-env -i git\nFreeBSD # pkg install git\nSolaris 9/10/11 (OpenCSW) # pkgutil -i git\nSolaris 11 Express # pkg install developer/versioning/git\nOpenBSD # pkg_add git\nAlpine $ apk add git\nSlitaz $ tazpkg get-install git\n\rGit is in Xcode\nInstall \u0026ldquo;Command Line Tools\u0026rdquo;\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"ea3204063054fd1c\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Install Git \u0026amp; Configure Git If you\u0026rsquo;re Win10 user and download a .exe, a executable file, just double click and keep clicking \u0026ldquo;next\u0026rdquo; until installation is complete.\nCheck if the installation was successful, just enter the command into command line:\ngit version\nSince Git is a distributed version control system tool, so the machine has to introduce itself every time when execute commands.U need to configure it:\n$ git config --global user.name \u0026quot;Your Name\u0026quot;\r$ git config --global user.email \u0026quot;email@example.com\u0026quot;\r Note❗ the \u0026ndash;global parameter of the git config command. Using this parameter means that all Git repositories on your computer will use this configuration.Of course, you can also specify a different username and email address for these repositories.\n Help view Git basic commands:\nusage: git [--version] [--help] [-C \u0026lt;path\u0026gt;] [-c name=value]\r[--exec-path[=\u0026lt;path\u0026gt;]] [--html-path] [--man-path] [--info-path]\r[-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\r[--git-dir=\u0026lt;path\u0026gt;] [--work-tree=\u0026lt;path\u0026gt;] [--namespace=\u0026lt;name\u0026gt;]\r\u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;]\rThese are common Git commands used in various situations:\rstart a working area (see also: git help tutorial)\rclone Clone a repository into a new directory\rinit Create an empty Git repository or reinitialize an existing one\rwork on the current change (see also: git help everyday)\radd Add file contents to the index\rmv Move or rename a file, a directory, or a symlink\rreset Reset current HEAD to the specified state\rrm Remove files from the working tree and from the index\rexamine the history and state (see also: git help revisions)\rbisect Use binary search to find the commit that introduced a bug\rgrep Print lines matching a pattern\rlog Show commit logs\rshow Show various types of objects\rstatus Show the working tree status\rgrow, mark and tweak your common history\rbranch List, create, or delete branches\rcheckout Switch branches or restore working tree files\rcommit Record changes to the repository\rdiff Show changes between commits, commit and working tree, etc\rmerge Join two or more development histories together\rrebase Reapply commits on top of another base tip\rtag Create, list, delete or verify a tag object signed with GPG\rcollaborate (see also: git help workflows)\rfetch Download objects and refs from another repository\rpull Fetch from and integrate with another repository or a local branch\rpush Update remote refs along with associated objects\r'git help -a' and 'git help -g' list available subcommands and some\rconcept guides. See 'git help \u0026lt;command\u0026gt;' or 'git help \u0026lt;concept\u0026gt;'\rto read about a specific subcommand or concept.\rAgain, In fact, all u need is just type \u0026ldquo;git \u0026ndash;help\u0026rdquo; at command line and read it.\nHere is my Git Commands \u0026amp; FAQ\nHere is official handbook\nIncluded in Hugo Blog ","description":"","id":12,"section":"posts","tags":["git","github"],"title":"Install Git","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/install-git/"},{"content":"Let\u0026rsquo;s Build a Static Website Included in Hugo Blog Why Hugo? \u0026amp; What is Hugo? Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again. \u0026hellip; Since websites are viewed far more often than they are edited, Hugo is designed to provide an optimal viewing experience for your website\u0026rsquo;s end users and an ideal writing experience for website authors.\n conference https://gohugo.io/about/what-is-hugo/\n Simply put: Only binary files after compilation, no need to install any dependencies. Fast!\nSo here we go! Install Hugo  conference official documentation https://gohugo.io/getting-started/quick-start/\n Windows\rMacOS\rLinux\r\rchoco install hugo -confirm #or scoop install hugo \r brew install hugo \r ##### Ubuntu sudo apt install hugo \r \r\r'use strict';\rvar containerId = JSON.parse(\"\\\"0c8dc9a2f1cda3a5\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Blogger is using Win10 OS now,if u DK what is choco or scoop NBD,and I recommend download the compiled compressed package directly,click here\nverify ur new install:\nhugo version\nMy hugo version shows Hugo Static Site Generator v0.66.0/extended windows/amd64 BuildDate: unknown ,emem\u0026hellip; just extended v0.66.0\nCreate a New Site If u has install Git , just right-click Git bash here at the folder that u want to create site.\nor u could cd to the folder, then enter the following command.\n#format: hugo new site [path] [flags] hugo new site urSiteName Add a Theme Install Git first, then download a theme from Github and add it to ur site’s themes directory:\nHere are Hugo themes\nThis Blog Theme is zzo, u could PR and using a git submodule for your theme\nif u don\u0026rsquo;t know how to basically use Git or GitHub, look at here or official documentation\ncd urSiteName #into the folder you just new git init git submodule add https://balabala.....git themes/themeName TRY IT ❗ Run example site From the root of themes/zzo/exampleSite (This is my Blog theme):\nhugo server --themesDir ../..\nConfigure theme U can read your theme documentation on the theme page, and this zzo has proprietary documentation\nThese documentations have detailed instructions about how to use their topic and how to customize topic.Worth reading.\nAdd some content enter the following command at your root site folder:\nhugo new posts/hello-hugo.md\n.md is Markdown file, you should use Markdown syntax, if u DK, here is handbook\nIf u know how to usr it, just write something ;-)\n--- title: \u0026quot;Hello Hugo\u0026quot; date: 2020-03-08T17:35:41+08:00 draft: true ---  ❗The initial state of the draft property of this .md file is true\n Start the hugo server If u didn\u0026rsquo;t change the draft property to false, could start the Hugo server with draft enabled:\nhugo server -D\nIt will host on http://localhost:1313/ if your port: 1313 is available. Otherwise, it\u0026rsquo;ll help u find an available port, and build your site.\nIf you had finished changes or changed the draft property to false. That is simple. Just call:\nhugo server\nand HIT ENTER, everything is OK.\nHelp view Hugo basic commands:\nhugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at http://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats deploy Deploy your site to a Cloud provider. env Print Hugo version and environment info gen A collection of several useful generators. help Help about any command import Import your site from others. list Listing out various types of content mod Various Hugo Modules helpers. new Create new content for your site server A high performance webserver version Print the version number of Hugo Flags: -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/ --cleanDestinationDir remove files from destination not found in static directories --config string config file (default is path/config.yaml|json|toml) --configDir string config dir (default \u0026quot;config\u0026quot;) -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date and author info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help help for hugo --i18n-warnings print missing translations --ignoreCache ignores the cache directory --ignoreVendor ignores any _vendor directory -l, --layoutDir string filesystem path to layout directory --log enable Logging --logFile string log File path (if set, logging enabled automatically) --minify minify any supported output format (HTML, XML etc.) --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --path-warnings print warnings on duplicate target paths etc. --quiet build in quiet mode --renderToMemory render to memory (only useful for benchmark testing) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output --verboseLog verbose logging -w, --watch watch filesystem for changes and recreate as needed Additional help topics: hugo check Contains some verification checks Use \u0026quot;hugo [command] --help\u0026quot; for more information about a command. In fact, all u need is just type \u0026ldquo;hugo \u0026ndash;help\u0026rdquo; at command line and read it.\nOn the next post I will tell you how to use GitHub to host a free static website.\nAll post about building a Hugo Blog are included in Hugo Blog\n","description":"","id":13,"section":"posts","tags":["hugo"],"title":"Hello Hugo","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/hello-hugo/"},{"content":"Included in Git Commands \u0026amp; FAQ Solve the problem that git pull/push needs to enter the password every time（Use GitHub private repo） git bash at the folder that you needs to operate.\ngit config --global credential.helper store\nthen do git pull or git push，will be prompted to enter your userName and userPasswd. No longer needed next time\n This operation will generate a text locally, which records the userName and userPasswd you just entered\n Blogger is using Win10 OS now. This text file is at C:\\Users\\urSysUserName，named .git-credentials the content are as follows:\nhttps://userName:userPasswd@github.com\nSolve the GitHub error fatal: HttpRequestException encountered Following the above, after executing the command above, if the following error occurs:\nerror fatal: HttpRequestException encountered\nMay be you need update Git Windows credential Manager, download the latest version\nIf the error still occurs, may be u need to update Git by downloading the latest version\n reference codeshare: How to solve the GitHub error fatal: HttpRequestException encountered\n ","description":"","id":14,"section":"posts","tags":["git","github"],"title":"Solve the problem that git pull/push needs to enter the password every time（Use GitHub private repo）","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/store-github-username-and-passwd/"},{"content":"Teletubby\u0026rsquo;s Blog  This blog is named after me and my GF,hahaha……😝\n Theme is zzo❗\nPowered by Hugo\n","description":"about","id":15,"section":"","tags":null,"title":"About","uri":"https://iiijesusiii.github.io/Teletubby/en/about/"}]