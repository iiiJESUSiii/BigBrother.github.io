[{"content":"Use GitHub to Host a Free Static Website Included in Hugo Blog This is an easy way to host your blog and a quick way.\nChange Your Publish Directory Delete \u0026ldquo;public\u0026rdquo; folder Delete it first, if your blog\u0026rsquo;s root directory has a \u0026ldquo;public\u0026rdquo; folder.\nsudo rm -rf dd\nChange publish directory to \u0026ldquo;docs\u0026rdquo; $ hugo --destination docs --gc server\nExecute this command would change your publish directory to \u0026ldquo;docs\u0026rdquo; folder, and start hugo server.\n\u0026ndash;gc option, enable to run some cleanup tasks (remove unused cache files) after the build.\nCheck your static website U can check your site, after start your hugo server.\nIf there are no errors, you can take the next step.\nCreate a public repo Sign up for Github (Skip, if u have Github account) Sign up for Github\nNew a public repo Get a awesome name, cause your blog site will look like this: https://userName.github.io/repoName/\n If UDK how to create a new repo, click here\n Push your \u0026ldquo;docs\u0026rdquo; folder to your repo create a .gitignore file Create a .gitignore at your root folder will make it easier to git push.\n This will be helpful, if UDK how to do.\n git push command  This will be helpful, if UDK how to do.\n üéâNow your static website is hosted on Github.\nAbout  Git Commands \u0026amp; FAQ\nhugo host on Github\nGitHub Pages\n ","description":"","id":0,"section":"posts","tags":["hugo","github"],"title":"Hugo Host on Github","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/hugo-host-on-github/"},{"content":"Included in Hugo Blog (Do u want to build a static website for yourself?) Included in Git Commands \u0026amp; FAQ git clone There are 2 ways to use git clone\n1. Using HTTPS This is a simple way to clone github repos from others or you.\ngit clone HTTPS(https://github.com/example.git)\n2. Using SSH This command only can clone the repository which it\u0026rsquo;s owner give U Private key or clone own repository.\ngit clone SSH(git@github.com:example.git)\nConfigure own repo with SSH KEY Enter following commands into ur command line:\n$ ssh-keygen\r#Generating public/private rsa key pair.\r#First line is select a storage path, press \u0026quot;Enter\u0026quot; for default\r#For *Win10 user* default path is /c/User/urSysUserName/.ssh/id_rsa\r#The next two lines are enter passphrase twice.You can press \u0026quot;Enter\u0026quot; twice directly\r$ cd ~/.ssh\r$ cat ~/.ssh/id_rsa.pub\r#Check ur PUBLIC KEY contents\r#Copy and paste the contents of the public key into *github* or others\r$ ssh -T git@github.com\r#check the connection to github\rgit push $ git init\r$ touch .gitignore\r$ vim .gitignore #type files or folders ignored by *git add*\r$ git add . #or git add \u0026lt;fileName or folderName\u0026gt;\r$ git commit -m \u0026quot;First commit\u0026quot; #-m option, add a description for this commit\r$ git remote add origin HTTPSorSSH\r#format: git remote add \u0026lt;remote repo's name\u0026gt; \u0026lt;remote repo's HTTPS\u0026gt;\r$ git push -u origin master #origin is remote repo's name\r#master is your current branch.\r#-u option, set default remote repo's name.\r#just type \u0026quot;git push\u0026quot; when u push next time.\rKnow for more by typing \u0026ldquo;git push -h\u0026rdquo;\nEmpty the contents of the repo on github $ git rm -rf *\r$ gir commit -m \u0026quot;empty the repo\u0026quot;\r$ git push -f\r","description":"","id":1,"section":"posts","tags":["git","github"],"title":"Git Basic Commands 1","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/git-basic-commands-1/"},{"content":"Included in Hugo Blog (Do u want to build a static website for yourself?) What is Git? Git is a free, open source distributed version control system tool designed to handle everything from small to very large projects with speed and efficiency.\n conference https://git-scm.com/\n Download Git Windows\rLinux\rMacOS\r\rchoco install git.install\r#or\rscoop install git\r If you didn\u0026rsquo;t install any package manager or installer, like choco, scoop\nThat\u0026rsquo;s will be fine, click here to download Git\n\rThe following commands that begin with \u0026ldquo;#\u0026rdquo; require root access. Ubuntu sudo apt-get install git\nFedora # dnf install git Fedora 22 and later\n# yum install git up to Fedora 21\nGentoo # emerge --ask --verbose dev-vcs/git\nArch Linux # pacman -S git\nopenSUSE # zypper install git\nMageia # urpmi git\nNix/NixOS # nix-env -i git\nFreeBSD # pkg install git\nSolaris 9/10/11 (OpenCSW) # pkgutil -i git\nSolaris 11 Express # pkg install developer/versioning/git\nOpenBSD # pkg_add git\nAlpine $ apk add git\nSlitaz $ tazpkg get-install git\n\rGit is in Xcode\nInstall \u0026ldquo;Command Line Tools\u0026rdquo;\r\r\r\r'use strict';\rvar containerId = JSON.parse(\"\\\"6f1f2daeebc1c014\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Install Git \u0026amp; Configure Git If you\u0026rsquo;re Win10 user and download a .exe, a executable file, just double click and keep clicking \u0026ldquo;next\u0026rdquo; until installation is complete.\nCheck if the installation was successful, just enter the command into command line:\ngit version\nSince Git is a distributed version control system tool, so the machine has to introduce itself every time when execute commands.U need to configure it:\n$ git config --global user.name \u0026quot;Your Name\u0026quot;\r$ git config --global user.email \u0026quot;email@example.com\u0026quot;\r Note‚ùó the \u0026ndash;global parameter of the git config command. Using this parameter means that all Git repositories on your computer will use this configuration.Of course, you can also specify a different username and email address for these repositories.\n Help view Git basic commands:\nusage: git [--version] [--help] [-C \u0026lt;path\u0026gt;] [-c name=value]\r[--exec-path[=\u0026lt;path\u0026gt;]] [--html-path] [--man-path] [--info-path]\r[-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\r[--git-dir=\u0026lt;path\u0026gt;] [--work-tree=\u0026lt;path\u0026gt;] [--namespace=\u0026lt;name\u0026gt;]\r\u0026lt;command\u0026gt; [\u0026lt;args\u0026gt;]\rThese are common Git commands used in various situations:\rstart a working area (see also: git help tutorial)\rclone Clone a repository into a new directory\rinit Create an empty Git repository or reinitialize an existing one\rwork on the current change (see also: git help everyday)\radd Add file contents to the index\rmv Move or rename a file, a directory, or a symlink\rreset Reset current HEAD to the specified state\rrm Remove files from the working tree and from the index\rexamine the history and state (see also: git help revisions)\rbisect Use binary search to find the commit that introduced a bug\rgrep Print lines matching a pattern\rlog Show commit logs\rshow Show various types of objects\rstatus Show the working tree status\rgrow, mark and tweak your common history\rbranch List, create, or delete branches\rcheckout Switch branches or restore working tree files\rcommit Record changes to the repository\rdiff Show changes between commits, commit and working tree, etc\rmerge Join two or more development histories together\rrebase Reapply commits on top of another base tip\rtag Create, list, delete or verify a tag object signed with GPG\rcollaborate (see also: git help workflows)\rfetch Download objects and refs from another repository\rpull Fetch from and integrate with another repository or a local branch\rpush Update remote refs along with associated objects\r'git help -a' and 'git help -g' list available subcommands and some\rconcept guides. See 'git help \u0026lt;command\u0026gt;' or 'git help \u0026lt;concept\u0026gt;'\rto read about a specific subcommand or concept.\rAgain, In fact, all u need is just type \u0026ldquo;git \u0026ndash;help\u0026rdquo; at command line and read it.\nHere is my Git Commands \u0026amp; FAQ\nHere is official handbook\nIncluded in Hugo Blog ","description":"","id":2,"section":"posts","tags":["git","github"],"title":"Install Git","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/install-git/"},{"content":"Let\u0026rsquo;s Build a Static Website Included in Hugo Blog Why Hugo? \u0026amp; What is Hugo? Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again. \u0026hellip; Since websites are viewed far more often than they are edited, Hugo is designed to provide an optimal viewing experience for your website\u0026rsquo;s end users and an ideal writing experience for website authors.\n conference https://gohugo.io/about/what-is-hugo/\n Simply put: Only binary files after compilation, no need to install any dependencies. Fast!\nSo here we go! Install Hugo  conference official documentation https://gohugo.io/getting-started/quick-start/\n Windows\rMacOS\rLinux\r\rchoco install hugo -confirm #or scoop install hugo \r brew install hugo \r ##### Ubuntu sudo apt install hugo \r \r\r'use strict';\rvar containerId = JSON.parse(\"\\\"0c8dc9a2f1cda3a5\\\"\");\rvar containerElem = document.getElementById(containerId);\rvar tabLinks = null;\rvar tabContents = null;\rvar ids = [];\rif (containerElem) {\rtabLinks = containerElem.querySelectorAll('.tab__link');\rtabContents = containerElem.querySelectorAll('.tab__content');\r}\rfor (var i = 0; i 0) {\rtabContents[0].style.display = 'block';\r}\r Blogger is using Win10 OS now,if u DK what is choco or scoop NBD,and I recommend download the compiled compressed package directly,click here\nverify ur new install:\nhugo version\nMy hugo version shows Hugo Static Site Generator v0.66.0/extended windows/amd64 BuildDate: unknown ,emem\u0026hellip; just extended v0.66.0\nCreate a New Site If u has install Git , just right-click Git bash here at the folder that u want to create site.\nor u could cd to the folder, then enter the following command.\n#format: hugo new site [path] [flags] hugo new site urSiteName Add a Theme Install Git first, then download a theme from Github and add it to ur site‚Äôs themes directory:\nHere are Hugo themes\nThis Blog Theme is zzo, u could PR and using a git submodule for your theme\nif u don\u0026rsquo;t know how to basically use Git or GitHub, look at here or official documentation\ncd urSiteName #into the folder you just new git init git submodule add https://balabala.....git themes/themeName TRY IT ‚ùó Run example site From the root of themes/zzo/exampleSite (This is my Blog theme):\nhugo server --themesDir ../..\nConfigure theme U can read your theme documentation on the theme page, and this zzo has proprietary documentation\nThese documentations have detailed instructions about how to use their topic and how to customize topic.Worth reading.\nAdd some content enter the following command at your root site folder:\nhugo new posts/hello-hugo.md\n.md is Markdown file, you should use Markdown syntax, if u DK, here is handbook\nIf u know how to usr it, just write something ;-)\n--- title: \u0026quot;Hello Hugo\u0026quot; date: 2020-03-08T17:35:41+08:00 draft: true ---  ‚ùóThe initial state of the draft property of this .md file is true\n Start the hugo server If u didn\u0026rsquo;t change the draft property to false, could start the Hugo server with draft enabled:\nhugo server -D\nIt will host on http://localhost:1313/ if your port: 1313 is available. Otherwise, it\u0026rsquo;ll help u find an available port, and build your site.\nIf you had finished changes or changed the draft property to false. That is simple. Just call:\nhugo server\nand HIT ENTER, everything is OK.\nHelp view Hugo basic commands:\nhugo is the main command, used to build your Hugo site. Hugo is a Fast and Flexible Static Site Generator built with love by spf13 and friends in Go. Complete documentation is available at http://gohugo.io/. Usage: hugo [flags] hugo [command] Available Commands: config Print the site configuration convert Convert your content to different formats deploy Deploy your site to a Cloud provider. env Print Hugo version and environment info gen A collection of several useful generators. help Help about any command import Import your site from others. list Listing out various types of content mod Various Hugo Modules helpers. new Create new content for your site server A high performance webserver version Print the version number of Hugo Flags: -b, --baseURL string hostname (and path) to the root, e.g. http://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory. Defaults: $TMPDIR/hugo_cache/ --cleanDestinationDir remove files from destination not found in static directories --config string config file (default is path/config.yaml|json|toml) --configDir string config dir (default \u0026quot;config\u0026quot;) -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date and author info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help help for hugo --i18n-warnings print missing translations --ignoreCache ignores the cache directory --ignoreVendor ignores any _vendor directory -l, --layoutDir string filesystem path to layout directory --log enable Logging --logFile string log File path (if set, logging enabled automatically) --minify minify any supported output format (HTML, XML etc.) --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --path-warnings print warnings on duplicate target paths etc. --quiet build in quiet mode --renderToMemory render to memory (only useful for benchmark testing) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output --verboseLog verbose logging -w, --watch watch filesystem for changes and recreate as needed Additional help topics: hugo check Contains some verification checks Use \u0026quot;hugo [command] --help\u0026quot; for more information about a command. In fact, all u need is just type \u0026ldquo;hugo \u0026ndash;help\u0026rdquo; at command line and read it.\nOn the next post I will tell you how to use GitHub to host a free static website.\nAll post about building a Hugo Blog are included in Hugo Blog\n","description":"","id":3,"section":"posts","tags":["hugo"],"title":"Hello Hugo","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/hello-hugo/"},{"content":"Included in Git Commands \u0026amp; FAQ Solve the problem that git pull/push needs to enter the password every timeÔºàUse GitHub private repoÔºâ git bash at the folder that you needs to operate.\ngit config --global credential.helper store\nthen do git pull or git pushÔºåwill be prompted to enter your userName and userPasswd. No longer needed next time\n This operation will generate a text locally, which records the userName and userPasswd you just entered\n Blogger is using Win10 OS now. This text file is at C:\\Users\\urSysUserNameÔºånamed .git-credentials the content are as follows:\nhttps://userName:userPasswd@github.com\nSolve the GitHub error fatal: HttpRequestException encountered Following the above, after executing the command above, if the following error occurs:\nerror fatal: HttpRequestException encountered\nMay be you need update Git Windows credential Manager, download the latest version\nIf the error still occurs, may be u need to update Git by downloading the latest version\n reference codeshare: How to solve the GitHub error fatal: HttpRequestException encountered\n ","description":"","id":4,"section":"posts","tags":["git","github"],"title":"Solve the problem that git pull/push needs to enter the password every timeÔºàUse GitHub private repoÔºâ","uri":"https://iiijesusiii.github.io/Teletubby/en/posts/store-github-username-and-passwd/"},{"content":"Teletubby\u0026rsquo;s Blog  This blog is named after me and my GF,hahaha‚Ä¶‚Ä¶üòù\n Theme is zzo‚ùó\nPowered by Hugo\n","description":"about","id":5,"section":"","tags":null,"title":"About","uri":"https://iiijesusiii.github.io/Teletubby/en/about/"}]