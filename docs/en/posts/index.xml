<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>‚úç on üëåTeletubby&#39;s Blog</title>
    <link>https://iiijesusiii.github.io/Teletubby/en/posts/</link>
    <description>Recent content in ‚úç on üëåTeletubby&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>oops!@gmail.com (Teletubby)</managingEditor>
    <webMaster>oops!@gmail.com (Teletubby)</webMaster>
    <copyright>¬©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 06 Mar 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://iiijesusiii.github.io/Teletubby/en/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>LeetCode Interview Questions 01.06</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-interview-questions-0106/</link>
        <pubDate>Sat, 21 Mar 2020 00:59:12 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sat, 21 Mar 2020 00:59:12 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-interview-questions-0106/</guid>
        <description>LeetCode Interview Questions 01.06. Compress String LCCI Included in my LeetCode Topic Implement a method to perform basic string compression using the counts of repeated characters. For example, the string aabcccccaaa would become a2blc5a3. If the &amp;ldquo;compressed&amp;rdquo; string would not become smaller than the original string, your method should return the original string. You can assume the string has only uppercase and lowercase letters (a - z). Example 1 2</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>LeetCodeEasy</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Python f-string</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/python-f-string/</link>
        <pubDate>Fri, 20 Mar 2020 18:49:36 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 18:49:36 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/python-f-string/</guid>
        <description>f-string f-string also known as formatted string literals, a new string formatting method introduced in Python 3.6. The method is derived from PEP 498 ‚Äì Literal String Interpolation, is designed to make the operation of formatting string more concise.f-string is a string literal that is prefixed with &amp;lsquo;f&amp;rsquo; or &amp;lsquo;F&#39;(like f&amp;rsquo;xxx&amp;rsquo; or F&amp;rsquo;xxx&amp;rsquo;). These strings may contain replacement fields, which are expressions delimited by curly braces {}. While other string</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>f-string</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 409</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-409/</link>
        <pubDate>Fri, 20 Mar 2020 15:50:19 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 15:50:19 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-409/</guid>
        <description>LeetCode 409. Longest Palindrome Included in my LeetCode Topic Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters. This is case sensitive, for example &amp;ldquo;Aa&amp;rdquo; is not considered a palindrome here. Example 1 2 3 4 5 6 Input:&amp;#34;abccccdd&amp;#34; Output:7 Explanation: One longest palindrome that can be built is &amp;#34;dccaccd&amp;#34;, whose length is 7. Note</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>hashTable</category>
            
          
            
              <category>LeetCodeEasy</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Python collections.Counter Time Complexity</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/python-counter-time-complexity/</link>
        <pubDate>Fri, 20 Mar 2020 13:50:44 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 13:50:44 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/python-counter-time-complexity/</guid>
        <description>The time complexity of collections.Counter() in Python As the source code shows, Counter is just a subclass of dict. Constructing it is O(n), because it has to iterate over the input, but operations on individual elements remain O(1). Note also from that source that it does not keep an order internally, but simply sorts by most common on output, in the ***__repr__*** method. Origin post from: StackOverflow-What is the time</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python Time Complexity</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/python-time-complexity/</link>
        <pubDate>Thu, 19 Mar 2020 15:37:56 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 15:37:56 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/python-time-complexity/</guid>
        <description>Time complexity of Python&amp;rsquo;s built-ins conference Python Wiki This page documents the time-complexity (aka &amp;ldquo;Big O&amp;rdquo; or &amp;ldquo;Big Oh&amp;rdquo;) of various operations in current CPython (last edited 2017-06-05 19:58:18 by JonathanHartley). Other Python implementations (or older or still-under development versions of CPython) may have slightly different performance characteristics. However, it is generally safe to assume that they are not slower by more than a factor of O(log n). Generally, &amp;lsquo;n&amp;rsquo;</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>Code Runtime in Python3</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/code-runtime-in-python3/</link>
        <pubDate>Thu, 19 Mar 2020 14:50:58 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 14:50:58 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/code-runtime-in-python3/</guid>
        <description>Several ways to get code runtime in Python3 ‚Ö† 1 2 3 4 5  import timestart =time.time()#code block end = time.time()print(&amp;#39;Running time: %sSeconds&amp;#39;%(end-start))  ‚Ö° 1 2 3 4 5  import timeitstart=timeit.default_timer()#code block end=timeit.default_timer()print(&amp;#39;Running time: %sSeconds&amp;#39;%(end-start))  ‚Ö¢ 1 2 3 4 5  import timestart =time.perf_counter()#code block end = time.perf_counter()print(&amp;#39;Running time: %sSeconds&amp;#39;%(end-start))  ‚Ö£ 1 2 3 4 5 6  import timestart =time.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python for-else</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/python-for-else/</link>
        <pubDate>Wed, 18 Mar 2020 23:02:24 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 23:02:24 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/python-for-else/</guid>
        <description>Python for-else &amp;amp; while-else clauses Included in python daily tips for-else Basic structure This is the basic structure of a for-else loop:
1 2 3 4 5 6 7 8  for item in container: if search_something(item): # Found it! process(item) break else: # Didn&amp;#39;t find anything.. not_found_in_container()   Explanation for loops also have an else clause which most of us are unfamiliar with. The else clause executes after the loop completes normally.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 1160</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-1160/</link>
        <pubDate>Wed, 18 Mar 2020 22:58:28 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 22:58:28 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-1160/</guid>
        <description>LeetCode 1160. Find Words That Can Be Formed by Characters Included in my LeetCode Topic You are given an array of strings words and a string chars. A string is good if it can be formed by characters from chars (each character can only be used once). Return the sum of lengths of all good strings in words. Example 1 2 3 4 5 6 7 8 9 Input: words</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>hashTable</category>
            
          
            
              <category>LeetCodeEasy</category>
            
          
        
        
          
            
              <category>Ë¥∞Èõ∂Ë¥∞Èõ∂Èõ∂Ë¥∞</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Hugo Host on Github</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/hugo-host-on-github/</link>
        <pubDate>Tue, 10 Mar 2020 18:50:30 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Tue, 10 Mar 2020 18:50:30 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/hugo-host-on-github/</guid>
        <description>Use GitHub to Host a Free Static Website Included in Hugo Blog This is an easy way to host your blog and a quick way.
Change Your Publish Directory Delete &amp;ldquo;public&amp;rdquo; folder Delete it first, if your blog&amp;rsquo;s root directory has a &amp;ldquo;public&amp;rdquo; folder.
sudo rm -rf dd
Change publish directory to &amp;ldquo;docs&amp;rdquo; $ hugo --destination docs --gc server
Execute this command would change your publish directory to &amp;ldquo;docs&amp;rdquo; folder, and start hugo server.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
        
      </item>
      
      <item>
        <title>Git Basic Commands 1</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/git-basic-commands-1/</link>
        <pubDate>Mon, 09 Mar 2020 14:23:08 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 09 Mar 2020 14:23:08 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/git-basic-commands-1/</guid>
        <description>Included in Hugo Blog (Do u want to build a static website for yourself?) Included in Git Commands &amp;amp; FAQ git clone There are 2 ways to use git clone
1. Using HTTPS This is a simple way to clone github repos from others or you.
git clone HTTPS(https://github.com/example.git)
2. Using SSH This command only can clone the repository which it&amp;rsquo;s owner give U Private key or clone own repository.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      
      <item>
        <title>Install Git</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/install-git/</link>
        <pubDate>Mon, 09 Mar 2020 13:28:12 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 09 Mar 2020 13:28:12 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/install-git/</guid>
        <description>Included in Hugo Blog (Do u want to build a static website for yourself?) What is Git? Git is a free, open source distributed version control system tool designed to handle everything from small to very large projects with speed and efficiency.
 conference https://git-scm.com/
 Download Git WindowsLinuxMacOSchoco install git.install#orscoop install git If you didn&amp;rsquo;t install any package manager or installer, like choco, scoop</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      
      <item>
        <title>Hello Hugo</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/hello-hugo/</link>
        <pubDate>Sun, 08 Mar 2020 20:35:41 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 08 Mar 2020 20:35:41 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/hello-hugo/</guid>
        <description>Let&amp;rsquo;s Build a Static Website Included in Hugo Blog Why Hugo? &amp;amp; What is Hugo? Hugo is a fast and modern static site generator written in Go, and designed to make website creation fun again. &amp;hellip; Since websites are viewed far more often than they are edited, Hugo is designed to provide an optimal viewing experience for your website&amp;rsquo;s end users and an ideal writing experience for website authors.
 conference https://gohugo.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
        
      </item>
      
      <item>
        <title>Solve the problem that git pull/push needs to enter the password every timeÔºàUse GitHub private repoÔºâ</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/store-github-username-and-passwd/</link>
        <pubDate>Sun, 08 Mar 2020 01:46:55 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 08 Mar 2020 01:46:55 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/store-github-username-and-passwd/</guid>
        <description>Included in Git Commands &amp;amp; FAQ Solve the problem that git pull/push needs to enter the password every timeÔºàUse GitHub private repoÔºâ git bash at the folder that you needs to operate.
git config --global credential.helper store
then do git pull or git pushÔºåwill be prompted to enter your userName and userPasswd. No longer needed next time
 This operation will generate a text locally, which records the userName and userPasswd you just entered</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      

    
  </channel>
</rss>