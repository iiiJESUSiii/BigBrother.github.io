<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>python on ðŸ‘ŒTeletubby&#39;s Blog</title>
    <link>https://iiijesusiii.github.io/Teletubby/en/tags/python/</link>
    <description>Recent content in python on ðŸ‘ŒTeletubby&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>oops!@gmail.com (Teletubby)</managingEditor>
    <webMaster>oops!@gmail.com (Teletubby)</webMaster>
    <copyright>Â©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 18 Mar 2020 23:02:24 +0800</lastBuildDate>
    
        <atom:link href="https://iiijesusiii.github.io/Teletubby/en/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Python3 for-else</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/python3-for-else/</link>
        <pubDate>Wed, 18 Mar 2020 23:02:24 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 23:02:24 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/python3-for-else/</guid>
        <description>Python for-else &amp;amp; while-else clauses Included in python daily tips for-else Basic structure This is the basic structure of a for-else loop:
1 2 3 4 5 6 7 8  for item in container: if search_something(item): # Found it! process(item) break else: # Didn&amp;#39;t find anything.. not_found_in_container()   Explanation for loops also have an else clause which most of us are unfamiliar with. The else clause executes after the loop completes normally.</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>python daily tips</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 1160</title>
        <link>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-1160/</link>
        <pubDate>Wed, 18 Mar 2020 22:58:28 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 22:58:28 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/en/posts/leetcode-1160/</guid>
        <description>LeetCode 1160. Find Words That Can Be Formed by Characters Included in my LeetCode Topic You are given an array of strings words and a string chars. A string is good if it can be formed by characters from chars (each character can only be used once). Return the sum of lengths of all good strings in words. Example 1 2 3 4 5 6 7 8 9 Input: words</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
            
              <category>hashTable</category>
            
          
            
              <category>for-else</category>
            
          
        
        
          
            
              <category>è´°é›¶è´°é›¶é›¶è´°</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      

    
  </channel>
</rss>