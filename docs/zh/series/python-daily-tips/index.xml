<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Python Daily Tips on 👌天线宝宝的博客</title>
    <link>https://iiijesusiii.github.io/Teletubby/zh/series/python-daily-tips/</link>
    <description>Recent content in Python Daily Tips on 👌天线宝宝的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>betheone.y@gmail.com (Teletubby)</managingEditor>
    <webMaster>betheone.y@gmail.com (Teletubby)</webMaster>
    <copyright>©{year},Teletubby,All Rights Reserved</copyright>
    <lastBuildDate>Mon, 30 Mar 2020 00:10:28 +0800</lastBuildDate>
    
        <atom:link href="https://iiijesusiii.github.io/Teletubby/zh/series/python-daily-tips/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>Python 排序算法</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorting-algorithms/</link>
        <pubDate>Mon, 30 Mar 2020 00:10:28 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 30 Mar 2020 00:10:28 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorting-algorithms/</guid>
        <description>我的 python 版本 是 3.7 排序算法 已收录在 python daily tips 排序算法是用来根据元素上的比较运算符来对给定的数组或列表元素进行重新排序的。比较运算符是用来确定各个数据</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>二叉树</category>
            
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python 如何跳出多层循环</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-break-loop/</link>
        <pubDate>Fri, 27 Mar 2020 10:37:35 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 27 Mar 2020 10:37:35 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-break-loop/</guid>
        <description>我的 python 版本 是 3.7 如何跳出多层循环 已收录在 python daily tips 自定义异常 1 2 3 4 5 6 7 8 9 10 11 class GetOutOfLoop(Exception): pass try: for i in range(5): for j in range(5): if i == j == 2: raise GetOutOfLoop() else: print(i,&amp;#39;----&amp;#39;, j) except GetOutOfLoop: pass 将多层循环封</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python timeit</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-timeit/</link>
        <pubDate>Sun, 22 Mar 2020 19:54:21 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 22 Mar 2020 19:54:21 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-timeit/</guid>
        <description>My python version is 3.7 timeit - 测量小代码片段的执行时间 已收录在 python daily tips 该模块提供了一种简单的方法来计算一小段 Python 代码的耗时。它避免了许多用于测量执行时间的常见陷</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python sorted()</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorted/</link>
        <pubDate>Sun, 22 Mar 2020 14:49:32 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 22 Mar 2020 14:49:32 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorted/</guid>
        <description>我的 python 版本 是 3.7 python sorted() (内置方法) 已收录在 python daily tips 译自: Python sorted() sorted() 函数以迭代方式返回排序列表。 sorted() 函数以特定顺序（&amp;quot;升序&amp;ldquo;或&amp;rd</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python f-string</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-f-string/</link>
        <pubDate>Fri, 20 Mar 2020 18:49:36 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 18:49:36 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-f-string/</guid>
        <description>我的 python 版本 是 3.7 f-string 已收录在 python daily tips 原文来自: sunxb10-Python格式化字符串f-string概览 f-string 亦称为 格式化字符串常量 (formatted string litera</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python collections.Counter 的时间复杂度</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-counter-time-complexity/</link>
        <pubDate>Fri, 20 Mar 2020 13:50:44 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 13:50:44 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-counter-time-complexity/</guid>
        <description>我的 python 版本 是 3.7 Python 中 collections.Counter() 的时间复杂度 正由 源码 所示, Counter 就是 字典 的子类. 构造它是 O(n), 因为对需要输入进行遍历，但是它对每个单元的操作仍是 O(1)。 注意，</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python之时间复杂度</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-time-complexity/</link>
        <pubDate>Thu, 19 Mar 2020 15:37:56 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 15:37:56 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-time-complexity/</guid>
        <description>我的 python 版本 是 3.7 Python内置方法的时间复杂度 已收录在 python daily tips 译自 Python Wiki 本页面涵盖了Python中若干方法的 时间复杂度（或者叫&amp;quot;O&amp;r</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python 计算代码的运行时间</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-code-runtime/</link>
        <pubDate>Thu, 19 Mar 2020 14:50:58 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 14:50:58 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-code-runtime/</guid>
        <description>我的 python 版本 是 3.7 Python3.7 中获取代码的几种方法 timeit &amp;ndash; 测量小代码片段的执行时间 方法一 1 2 3 4 5 import timeit start=timeit.default_timer() #中间写代码块 end=timeit.default_timer() print(&amp;#39;Running time: %sSeconds&amp;#39;%(end-start)) 此外 1 2 %timeit (1, 2, 3) # 7.87 ns ± 0.261 ns per loop</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python for-else 语句</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-for-else/</link>
        <pubDate>Wed, 18 Mar 2020 23:02:24 +0800</pubDate>
        <author>betheone.y@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 23:02:24 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-for-else/</guid>
        <description>我的 python 版本 是 3.7 Python for-else &amp;amp; while-else 语句 已收录在 python daily tips for-else 基本结构 这是for-else循环的基本结构： 1 2 3 4 5 6 7 8 for item in container: if search_something(item): # 找到了! process(item) break else: # 没有找到</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      

    
  </channel>
</rss>