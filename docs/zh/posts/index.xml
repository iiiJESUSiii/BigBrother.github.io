<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>✍ on 👌天线宝宝的博客</title>
    <link>https://iiijesusiii.github.io/Teletubby/zh/posts/</link>
    <description>Recent content in ✍ on 👌天线宝宝的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>oops!@gmail.com (Teletubby)</managingEditor>
    <webMaster>oops!@gmail.com (Teletubby)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 06 Mar 2020 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://iiijesusiii.github.io/Teletubby/zh/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>LeetCode 300</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-300/</link>
        <pubDate>Mon, 23 Mar 2020 00:46:14 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 23 Mar 2020 00:46:14 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-300/</guid>
        <description>LeetCode 300. 最长上升子序列 已收录在 my LeetCode 题目 给定一个无序的整数数组，找到其中最长上升子序列的长度。 示例 1 2 3 4 输入: [10,9,2,5,3,7,101,18] 输出: 4 解释: 最长的上升子序列是</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>DP</category>
            
          
            
              <category>BS</category>
            
          
            
              <category>leetCodeMed</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 945</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-945/</link>
        <pubDate>Sun, 22 Mar 2020 23:54:53 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 22 Mar 2020 23:54:53 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-945/</guid>
        <description>LeetCode 945. 使数组唯一的最小增量 已收录在 my LeetCode 题目 给定整数数组 A，每次 move 操作将会选择任意 A[i]，并将其递增 1。 返回使 A 中的每个值都是唯一的最少操作次</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>greedy algorithm</category>
            
          
            
              <category>leetCodeMed</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Python timeit</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-timeit/</link>
        <pubDate>Sun, 22 Mar 2020 19:54:21 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 22 Mar 2020 19:54:21 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-timeit/</guid>
        <description>My python version is 3.7 timeit - 测量小代码片段的执行时间 已收录在 python daily tips 该模块提供了一种简单的方法来计算一小段 Python 代码的耗时。它避免了许多用于测量执行时间的常见陷</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python sorted()</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorted/</link>
        <pubDate>Sun, 22 Mar 2020 14:49:32 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 22 Mar 2020 14:49:32 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-sorted/</guid>
        <description>我的 python 版本 是 3.7 python sorted() (内置方法) 已收录在 python daily tips 译自: Python sorted() sorted() 函数以迭代方式返回排序列表。 sorted() 函数以特定顺序（&amp;quot;升序&amp;ldquo;或&amp;rd</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>贝祖等式</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/bezu-identity/</link>
        <pubDate>Sat, 21 Mar 2020 21:52:58 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sat, 21 Mar 2020 21:52:58 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/bezu-identity/</guid>
        <description>贝祖等式 这里只是简单的叙述 贝祖定理(裴蜀定理)。 参考 贝祖等式 参考 裴蜀定理 对任何整数 a，b 和它们的最大公约数 d，关于未知数 x 和 y 的线性不定方程</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>bezu identity</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Math</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 67</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-67/</link>
        <pubDate>Sat, 21 Mar 2020 13:58:09 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sat, 21 Mar 2020 13:58:09 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-67/</guid>
        <description>LeetCode 67. 二进制求和 已收录在 my LeetCode 题目 给定两个二进制字符串，返回他们的和（用二进制表示）。 输入为 非空 字符串且只包含数字 1 和 0。 示例 1 2 3 4 5 输入: a</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hashTable</category>
            
          
            
              <category>leetCodeEasy</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 面试题 01.06</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-interview-questions-0106/</link>
        <pubDate>Sat, 21 Mar 2020 00:59:12 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sat, 21 Mar 2020 00:59:12 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-interview-questions-0106/</guid>
        <description>LeetCode 面试题 01.06. 字符串压缩 已收录在 my LeetCode 题目 字符串压缩。利用字符重复出现的次数，编写一种方法，实现基本的字符串压缩功能。 比如，字符串aabccccc</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>leetCodeEasy</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Python f-string</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-f-string/</link>
        <pubDate>Fri, 20 Mar 2020 18:49:36 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 18:49:36 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-f-string/</guid>
        <description>我的 python 版本 是 3.7 f-string 已收录在 python daily tips 原文来自: sunxb10-Python格式化字符串f-string概览 f-string 亦称为 格式化字符串常量 (formatted string litera</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 409</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-409/</link>
        <pubDate>Fri, 20 Mar 2020 15:50:19 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 15:50:19 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-409/</guid>
        <description>LeetCode 409. 最长回文串 已收录在 my LeetCode 题目 给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。 在构造过程中，请注意区分大小写。</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hashTable</category>
            
          
            
              <category>leetCodeEasy</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>Python collections.Counter 的时间复杂度</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-counter-time-complexity/</link>
        <pubDate>Fri, 20 Mar 2020 13:50:44 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Fri, 20 Mar 2020 13:50:44 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-counter-time-complexity/</guid>
        <description>我的 python 版本 是 3.7 Python 中 collections.Counter() 的时间复杂度 正由 源码 所示, Counter 就是 字典 的子类. 构造它是 O(n), 因为对需要输入进行遍历，但是它对每个单元的操作仍是 O(1)。 注意，</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python之时间复杂度</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-time-complexity/</link>
        <pubDate>Thu, 19 Mar 2020 15:37:56 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 15:37:56 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-time-complexity/</guid>
        <description>我的 python 版本 是 3.7 Python内置方法的时间复杂度 已收录在 python daily tips 译自 Python Wiki 本页面涵盖了Python中若干方法的 时间复杂度（或者叫&amp;quot;O&amp;r</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python 计算代码的运行时间</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-code-runtime/</link>
        <pubDate>Thu, 19 Mar 2020 14:50:58 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Thu, 19 Mar 2020 14:50:58 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-code-runtime/</guid>
        <description>我的 python 版本 是 3.7 Python3.7 中获取代码的几种方法 timeit &amp;ndash; 测量小代码片段的执行时间 方法一 1 2 3 4 5 import timeit start=timeit.default_timer() #中间写代码块 end=timeit.default_timer() print(&amp;#39;Running time: %sSeconds&amp;#39;%(end-start)) 此外 1 2 %timeit (1, 2, 3) # 7.87 ns ± 0.261 ns per loop</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>Python for-else 语句</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/python-for-else/</link>
        <pubDate>Wed, 18 Mar 2020 23:02:24 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 23:02:24 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/python-for-else/</guid>
        <description>我的 python 版本 是 3.7 Python for-else &amp;amp; while-else 语句 已收录在 python daily tips for-else 基本结构 这是for-else循环的基本结构： 1 2 3 4 5 6 7 8 for item in container: if search_something(item): # 找到了! process(item) break else: # 没有找到</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>python</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Python Daily Tips</category>
            
          
        
      </item>
      
      <item>
        <title>LeetCode 1160</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-1160/</link>
        <pubDate>Wed, 18 Mar 2020 22:58:28 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Wed, 18 Mar 2020 22:58:28 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/leetcode-1160/</guid>
        <description>LeetCode 1160. 拼写单词 已收录在 my LeetCode 题目 给你一份『词汇表』（字符串数组） words 和一张『字母表』（字符串） chars。 假如你可以用 chars 中的『字母』（字符）拼写出</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hashTable</category>
            
          
            
              <category>leetCodeEasy</category>
            
          
        
        
          
            
              <category>贰零贰零零贰</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
      </item>
      
      <item>
        <title>将Hugo托管在Github上</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/hugo-host-on-github/</link>
        <pubDate>Tue, 10 Mar 2020 18:50:30 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Tue, 10 Mar 2020 18:50:30 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/hugo-host-on-github/</guid>
        <description>使用 Github 托管个人静态网站 已收录在 Hugo Blog 这个托管你个人博客的方法既简便又快捷。 更改你的发布（publish）目录 删除 &amp;ldquo;public&amp;rdquo; 文件夹 如果你博客的 根目录 下有</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
        
      </item>
      
      <item>
        <title>Git 基本指令 1</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/git-basic-commands-1/</link>
        <pubDate>Mon, 09 Mar 2020 14:23:08 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 09 Mar 2020 14:23:08 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/git-basic-commands-1/</guid>
        <description>已收录在 Hugo Blog (你想给你自己整一个静态网站吗?) 已收录在 Git Commands &amp;amp; FAQ git clone 这里有两种方法去使用 git clone 1. 使用 HTTPS 这是一个克隆自己或者别人在 Github 上的仓库的一个</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      
      <item>
        <title>安装 Git</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/install-git/</link>
        <pubDate>Mon, 09 Mar 2020 13:28:12 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Mon, 09 Mar 2020 13:28:12 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/install-git/</guid>
        <description>已收录在 Hugo Blog (你想给你自己整一个静态网站吗?) 什么是 Git? Git是一个免费的开源的分布式版本控制系统工具，能够快速高效地处理从小型到大型项目的所</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      
      <item>
        <title>你好 Hugo</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/hello-hugo/</link>
        <pubDate>Sun, 08 Mar 2020 20:35:41 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 08 Mar 2020 20:35:41 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/hello-hugo/</guid>
        <description>来白手建站吧，搭建一个hugo静态网站 已收录在 Hugo Blog 为什么选择 Hugo? &amp;amp; 什么是 Hugo? Hugo是一种用Go语言编写的快速的、现代静态网站生成器，为能够更有</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>hugo</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
        
      </item>
      
      <item>
        <title>解决 git pull/push 每次都需要输入密码问题（使用GitHub私有库）</title>
        <link>https://iiijesusiii.github.io/Teletubby/zh/posts/store-github-username-and-passwd/</link>
        <pubDate>Sun, 08 Mar 2020 01:46:55 +0800</pubDate>
        <author>oops!@gmail.com (Teletubby)</author>
        <atom:modified>Sun, 08 Mar 2020 01:46:55 +0800</atom:modified>
        <guid>https://iiijesusiii.github.io/Teletubby/zh/posts/store-github-username-and-passwd/</guid>
        <description>已收录在 Git Commands &amp;amp; FAQ 解决 git pull/push 每次都需要输入密码问题（使用GitHub私有库） git bash到你需要操作的文件夹 git config --global credential.helper store 然后再执行一次 git pull or git pus</description>
        
        <dc:creator>Teletubby</dc:creator>
        
        
        
        
          
            
              <category>git</category>
            
          
            
              <category>github</category>
            
          
        
        
          
            
              <category>Hello World!</category>
            
          
        
        
          
            
              <category>Hugo Blog</category>
            
          
            
              <category>Git Commands &amp; FAQ</category>
            
          
        
      </item>
      

    
  </channel>
</rss>